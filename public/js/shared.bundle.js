!function(g){function t(I){if(n[I])return n[I].exports;var e=n[I]={i:I,l:!1,exports:{}};return g[I].call(e.exports,e,e.exports,t),e.l=!0,e.exports}var n={};t.m=g,t.c=n,t.d=function(g,n,I){t.o(g,n)||Object.defineProperty(g,n,{configurable:!1,enumerable:!0,get:I})},t.n=function(g){var n=g&&g.__esModule?function(){return g.default}:function(){return g};return t.d(n,"a",n),n},t.o=function(g,t){return Object.prototype.hasOwnProperty.call(g,t)},t.p="",t(t.s=0)}([/*!*****************************!*\
  !*** ./client/js/shared.js ***!
  \*****************************/
/*! dynamic exports provided */
/*! all exports used */
function(module,exports,__webpack_require__){"use strict";eval('\n\n__webpack_require__(/*! bootstrap.native/dist/bootstrap-native-v4 */ 1);\n\n__webpack_require__(/*! ./../styles/site.scss */ 3);\n\n/* SHARED MODULES USED IN EVERY PAGE\r\n*\r\n* In this file you can import JS or SCSS file wchich are shared on every page,\r\n* basic configuration includes bootstrap-native-v4, and site.scss for entry point to sass loader\r\n*\r\n*/\nconsole.log("shared JS imported");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9jbGllbnQvanMvc2hhcmVkLmpzP2QxODgiXSwic291cmNlc0NvbnRlbnQiOlsiLyogU0hBUkVEIE1PRFVMRVMgVVNFRCBJTiBFVkVSWSBQQUdFXHJcbipcclxuKiBJbiB0aGlzIGZpbGUgeW91IGNhbiBpbXBvcnQgSlMgb3IgU0NTUyBmaWxlIHdjaGljaCBhcmUgc2hhcmVkIG9uIGV2ZXJ5IHBhZ2UsXHJcbiogYmFzaWMgY29uZmlndXJhdGlvbiBpbmNsdWRlcyBib290c3RyYXAtbmF0aXZlLXY0LCBhbmQgc2l0ZS5zY3NzIGZvciBlbnRyeSBwb2ludCB0byBzYXNzIGxvYWRlclxyXG4qXHJcbiovXHJcbmltcG9ydCAnYm9vdHN0cmFwLm5hdGl2ZS9kaXN0L2Jvb3RzdHJhcC1uYXRpdmUtdjQnO1xyXG5pbXBvcnQgJy4vLi4vc3R5bGVzL3NpdGUuc2Nzcyc7XHJcbmNvbnNvbGUubG9nKFwic2hhcmVkIEpTIGltcG9ydGVkXCIpXHJcbiBcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gY2xpZW50L2pzL3NoYXJlZC5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFNQTtBQUNBO0FBQUE7QUFDQTtBQVJBOzs7Ozs7QUFRQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n')},/*!*******************************************************************!*\
  !*** ./node_modules/bootstrap.native/dist/bootstrap-native-v4.js ***!
  \*******************************************************************/
/*! dynamic exports provided */
/*! all exports used */
function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Native Javascript for Bootstrap 4 v2.0.19 | Â© dnp_theme | MIT-License\n(function (root, factory) {\n  if (true) {\n    // AMD support:\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like:\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    var bsn = factory();\n    root.Alert = bsn.Alert;\n    root.Button = bsn.Button;\n    root.Carousel = bsn.Carousel;\n    root.Collapse = bsn.Collapse;\n    root.Dropdown = bsn.Dropdown;\n    root.Modal = bsn.Modal;\n    root.Popover = bsn.Popover;\n    root.ScrollSpy = bsn.ScrollSpy;\n    root.Tab = bsn.Tab;\n    root.Tooltip = bsn.Tooltip;\n  }\n}(this, function () {\n  \n  /* Native Javascript for Bootstrap 4 | Internal Utility Functions\n  ----------------------------------------------------------------*/\n  \"use strict\";\n  \n  // globals\n  var globalObject = typeof global !== 'undefined' ? global : this||window,\n    HTML = document.documentElement, DOC = document, body = 'body', // allow the library to be used in <head>\n  \n    // function toggle attributes\n    dataToggle    = 'data-toggle',\n    dataDismiss   = 'data-dismiss',\n    dataSpy       = 'data-spy',\n    dataRide      = 'data-ride',\n  \n    // components\n    stringAlert     = 'Alert',\n    stringButton    = 'Button',\n    stringCarousel  = 'Carousel',\n    stringCollapse  = 'Collapse',\n    stringDropdown  = 'Dropdown',\n    stringModal     = 'Modal',\n    stringPopover   = 'Popover',\n    stringScrollSpy = 'ScrollSpy',\n    stringTab       = 'Tab',\n    stringTooltip   = 'Tooltip',\n  \n    // options DATA API\n    databackdrop      = 'data-backdrop',\n    dataKeyboard      = 'data-keyboard',\n    dataTarget        = 'data-target',\n    dataInterval      = 'data-interval',\n    dataHeight        = 'data-height',\n    dataPause         = 'data-pause',\n    dataTitle         = 'data-title',\n    dataOriginalTitle = 'data-original-title',\n    dataOriginalText  = 'data-original-text',\n    dataDismissible   = 'data-dismissible',\n    dataTrigger       = 'data-trigger',\n    dataAnimation     = 'data-animation',\n    dataContainer     = 'data-container',\n    dataPlacement     = 'data-placement',\n    dataDelay         = 'data-delay',\n    dataOffsetTop     = 'data-offset-top',\n    dataOffsetBottom  = 'data-offset-bottom',\n  \n    // option keys\n    backdrop = 'backdrop', keyboard = 'keyboard', delay = 'delay',\n    content = 'content', target = 'target',\n    interval = 'interval', pause = 'pause', animation = 'animation',\n    placement = 'placement', container = 'container',\n  \n    // box model\n    offsetTop    = 'offsetTop',      offsetBottom   = 'offsetBottom',\n    offsetLeft   = 'offsetLeft',\n    scrollTop    = 'scrollTop',      scrollLeft     = 'scrollLeft',\n    clientWidth  = 'clientWidth',    clientHeight   = 'clientHeight',\n    offsetWidth  = 'offsetWidth',    offsetHeight   = 'offsetHeight',\n    innerWidth   = 'innerWidth',     innerHeight    = 'innerHeight',\n    scrollHeight = 'scrollHeight',   height         = 'height',\n  \n    // aria\n    ariaExpanded = 'aria-expanded',\n    ariaHidden   = 'aria-hidden',\n  \n    // event names\n    clickEvent    = 'click',\n    hoverEvent    = 'hover',\n    keydownEvent  = 'keydown',\n    resizeEvent   = 'resize',\n    scrollEvent   = 'scroll',\n    // originalEvents\n    showEvent     = 'show',\n    shownEvent    = 'shown',\n    hideEvent     = 'hide',\n    hiddenEvent   = 'hidden',\n    closeEvent    = 'close',\n    closedEvent   = 'closed',\n    slidEvent     = 'slid',\n    slideEvent    = 'slide',\n    changeEvent   = 'change',\n  \n    // other\n    getAttribute            = 'getAttribute',\n    setAttribute            = 'setAttribute',\n    hasAttribute            = 'hasAttribute',\n    getElementsByTagName    = 'getElementsByTagName',\n    preventDefault          = 'preventDefault',\n    getBoundingClientRect   = 'getBoundingClientRect',\n    querySelectorAll        = 'querySelectorAll',\n    getElementsByCLASSNAME  = 'getElementsByClassName',\n  \n    indexOf      = 'indexOf',\n    parentNode   = 'parentNode',\n    length       = 'length',\n    toLowerCase  = 'toLowerCase',\n    Transition   = 'Transition',\n    Webkit       = 'Webkit',\n    style        = 'style',\n  \n    active     = 'active',\n    showClass  = 'show',\n    collapsing = 'collapsing',\n    disabled   = 'disabled',\n    loading    = 'loading',\n    left       = 'left',\n    right      = 'right',\n    top        = 'top',\n    bottom     = 'bottom',\n  \n    // tooltip / popover\n    mouseHover = ('onmouseleave' in document) ? [ 'mouseenter', 'mouseleave'] : [ 'mouseover', 'mouseout' ],\n    tipPositions = /\\b(top|bottom|left|right)+/,\n    \n    // modal\n    modalOverlay = 0,\n    fixedTop = 'fixed-top',\n    fixedBottom = 'fixed-bottom',\n    \n    // transitionEnd since 2.0.4\n    supportTransitions = Webkit+Transition in HTML[style] || Transition[toLowerCase]() in HTML[style],\n    transitionEndEvent = Webkit+Transition in HTML[style] ? Webkit[toLowerCase]()+Transition+'End' : Transition[toLowerCase]()+'end',\n  \n    // set new focus element since 2.0.3\n    setFocus = function(element){\n      element.focus ? element.focus() : element.setActive();\n    },\n  \n    // class manipulation, since 2.0.0 requires polyfill.js\n    addClass = function(element,classNAME) {\n      element.classList.add(classNAME);\n    },\n    removeClass = function(element,classNAME) {\n      element.classList.remove(classNAME);\n    },\n    hasClass = function(element,classNAME){ // since 2.0.0\n      return element.classList.contains(classNAME);\n    },\n  \n    // selection methods\n    getElementsByClassName = function(element,classNAME) { // returns Array\n      return [].slice.call(element[getElementsByCLASSNAME]( classNAME ));\n    },\n    queryElement = function (selector, parent) {\n      var lookUp = parent ? parent : document;\n      return typeof selector === 'object' ? selector : lookUp.querySelector(selector);\n    },\n    getClosest = function (element, selector) { //element is the element and selector is for the closest parent element to find\n    // source http://gomakethings.com/climbing-up-and-down-the-dom-tree-with-vanilla-javascript/\n      var firstChar = selector.charAt(0);\n      for ( ; element && element !== document; element = element[parentNode] ) {// Get closest match\n        if ( firstChar === '.' ) {// If selector is a class\n          if ( queryElement(selector,element[parentNode]) !== null && hasClass(element,selector.replace('.','')) ) { return element; }\n        } else if ( firstChar === '#' ) { // If selector is an ID\n          if ( element.id === selector.substr(1) ) { return element; }\n        }\n      }\n      return false;\n    },\n  \n    // event attach jQuery style / trigger  since 1.2.0\n    on = function (element, event, handler) {\n      element.addEventListener(event, handler, false);\n    },\n    off = function(element, event, handler) {\n      element.removeEventListener(event, handler, false);\n    },\n    one = function (element, event, handler) { // one since 2.0.4\n      on(element, event, function handlerWrapper(e){\n        handler(e);\n        off(element, event, handlerWrapper);\n      });\n    },\n    emulateTransitionEnd = function(element,handler){ // emulateTransitionEnd since 2.0.4\n      if (supportTransitions) { one(element, transitionEndEvent, function(e){ handler(e); }); }\n      else { handler(); }\n    },\n    bootstrapCustomEvent = function (eventName, componentName, related) {\n      var OriginalCustomEvent = new CustomEvent( eventName + '.bs.' + componentName);\n      OriginalCustomEvent.relatedTarget = related;\n      this.dispatchEvent(OriginalCustomEvent);\n    },\n  \n    // Init DATA API\n    initializeDataAPI = function( component, constructor, collection ){\n      for (var i=0; i < collection[length]; i++) {\n        new constructor(collection[i]);\n      }\n    },\n  \n    // tab / collapse stuff\n    targetsReg = /^\\#(.)+$/,\n  \n    // tooltip / popover stuff\n    getScroll = function() { // also Affix and ScrollSpy uses it\n      return {\n        y : globalObject.pageYOffset || HTML[scrollTop],\n        x : globalObject.pageXOffset || HTML[scrollLeft]\n      }\n    },\n    styleTip = function(link,element,position,parent) { // both popovers and tooltips (target,tooltip,placement,elementToAppendTo)\n      var elementDimensions = { w : element[offsetWidth], h: element[offsetHeight] },\n          windowWidth = (HTML[clientWidth] || DOC[body][clientWidth]),\n          windowHeight = (HTML[clientHeight] || DOC[body][clientHeight]),\n          rect = link[getBoundingClientRect](),\n          scroll = parent === DOC[body] ? getScroll() : { x: parent[offsetLeft] + parent[scrollLeft], y: parent[offsetTop] + parent[scrollTop] },\n          linkDimensions = { w: rect[right] - rect[left], h: rect[bottom] - rect[top] },\n          arrow = queryElement('.arrow',element),\n          arrowWidth = arrow[offsetWidth], isPopover = hasClass(element,'popover'),\n          topPosition, leftPosition, arrowTop, arrowLeft,\n  \n          halfTopExceed = rect[top] + linkDimensions.h/2 - elementDimensions.h/2 < 0,\n          halfLeftExceed = rect[left] + linkDimensions.w/2 - elementDimensions.w/2 < 0,\n          halfRightExceed = rect[left] + elementDimensions.w/2 + linkDimensions.w/2 >= windowWidth,\n          halfBottomExceed = rect[top] + elementDimensions.h/2 + linkDimensions.h/2 >= windowHeight,\n          topExceed = rect[top] - elementDimensions.h < 0,\n          leftExceed = rect[left] - elementDimensions.w < 0,\n          bottomExceed = rect[top] + elementDimensions.h + linkDimensions.h >= windowHeight,\n          rightExceed = rect[left] + elementDimensions.w + linkDimensions.w >= windowWidth;\n  \n      // recompute position\n      position = (position === left || position === right) && leftExceed && rightExceed ? top : position; // first, when both left and right limits are exceeded, we fall back to top|bottom\n      position = position === top && topExceed ? bottom : position;\n      position = position === bottom && bottomExceed ? top : position;\n      position = position === left && leftExceed ? right : position;\n      position = position === right && rightExceed ? left : position;\n      \n      // apply styling to tooltip or popover\n      if ( position === left || position === right ) { // secondary|side positions\n        if ( position === left ) { // LEFT\n          leftPosition = rect[left] + scroll.x - elementDimensions.w;\n        } else if ( position === right ) { // RIGHT\n          leftPosition = rect[left] + scroll.x + linkDimensions.w;\n        }\n  \n        // adjust top and arrow\n        if (halfTopExceed) {\n          topPosition = rect[top] + scroll.y;\n          arrowTop = linkDimensions.h/2 - arrowWidth/2;\n        } else if (halfBottomExceed) {\n          topPosition = rect[top] + scroll.y - elementDimensions.h + linkDimensions.h;\n          arrowTop = elementDimensions.h - linkDimensions.h/2 - arrowWidth/2;\n        } else {\n          topPosition = rect[top] + scroll.y - elementDimensions.h/2 + linkDimensions.h/2;\n          arrowTop = elementDimensions.h/2 - arrowWidth/2;\n        }\n      } else if ( position === top || position === bottom ) { // primary|vertical positions\n        if ( position === top) { // TOP\n          topPosition =  rect[top] + scroll.y - elementDimensions.h;\n        } else if ( position === bottom ) { // BOTTOM\n          topPosition = rect[top] + scroll.y + linkDimensions.h;\n        }\n        // adjust left | right and also the arrow\n        if (halfLeftExceed) {\n          leftPosition = 0;\n          arrowLeft = rect[left] + linkDimensions.w/2 - arrowWidth/2;\n        } else if (halfRightExceed) {\n          leftPosition = windowWidth - elementDimensions.w*1.01;\n          arrowLeft = elementDimensions.w - ( windowWidth - rect[left] ) + linkDimensions.w/2 - arrowWidth/2;\n        } else {\n          leftPosition = rect[left] + scroll.x - elementDimensions.w/2 + linkDimensions.w/2;\n          arrowLeft = elementDimensions.w/2 - arrowWidth/2;\n        }\n      }\n  \n      // fixing some CSS bug with Bootstrap 4 alpha\n      topPosition = position === top && isPopover ? topPosition - arrowWidth : topPosition;\n      leftPosition = position === left && isPopover ? leftPosition - arrowWidth : leftPosition;\n  \n      // apply style to tooltip/popover and it's arrow\n      element[style][top] = topPosition + 'px';\n      element[style][left] = leftPosition + 'px';\n  \n      arrowTop && (arrow[style][top] = arrowTop + 'px');\n      arrowLeft && (arrow[style][left] = arrowLeft + 'px');\n  \n      element.className[indexOf](position) === -1 && (element.className = element.className.replace(tipPositions,position));\n    };\n  \n  \n  /* Native Javascript for Bootstrap 4 | Alert\n  -------------------------------------------*/\n  \n  // ALERT DEFINITION\n  // ================\n  var Alert = function( element ) {\n    \n    // initialization element\n    element = queryElement(element);\n  \n    // bind, target alert, duration and stuff\n    var self = this, component = 'alert',\n      alert = getClosest(element,'.'+component),\n      triggerHandler = function(){ hasClass(alert,'fade') ? emulateTransitionEnd(alert,transitionEndHandler) : transitionEndHandler(); },\n      // handlers\n      clickHandler = function(e){\n        alert = getClosest(e[target],'.'+component);\n        element = queryElement('['+dataDismiss+'=\"'+component+'\"]',alert);\n        element && alert && (element === e[target] || element.contains(e[target])) && self.close();\n      },\n      transitionEndHandler = function(){\n        bootstrapCustomEvent.call(alert, closedEvent, component);\n        off(element, clickEvent, clickHandler); // detach it's listener\n        alert[parentNode].removeChild(alert);\n      };\n    \n    // public method\n    this.close = function() {\n      if ( alert && element && hasClass(alert,showClass) ) {\n        bootstrapCustomEvent.call(alert, closeEvent, component);\n        removeClass(alert,showClass);\n        alert && triggerHandler();\n      }\n    };\n  \n    // init\n    if ( !(stringAlert in element ) ) { // prevent adding event handlers twice\n      on(element, clickEvent, clickHandler);\n    }\n    element[stringAlert] = this;\n  };\n  \n  // ALERT DATA API\n  // ==============\n  initializeDataAPI ( stringAlert, Alert, DOC[querySelectorAll]('['+dataDismiss+'=\"alert\"]') );\n  \n  \n  /* Native Javascript for Bootstrap 4 | Button\n  ---------------------------------------------*/\n  \n  // BUTTON DEFINITION\n  // ===================\n  var Button = function( element ) {\n  \n    // initialization element\n    element = queryElement(element);\n  \n    // constant\n    var toggled = false, // toggled makes sure to prevent triggering twice the change.bs.button events\n  \n        // strings\n        component = 'button',\n        checked = 'checked',\n        reset = 'reset',\n        LABEL = 'LABEL',\n        INPUT = 'INPUT',\n  \n      // private methods\n      toggle = function(e) {\n        var label = e[target].tagName === LABEL ? e[target] : e[target][parentNode].tagName === LABEL ? e[target][parentNode] : null; // the .btn label\n        \n        if ( !label ) return; //react if a label or its immediate child is clicked\n  \n        var eventTarget = this, // the button group, the target of the handler function\n          labels = getElementsByClassName(eventTarget,'btn'), // all the button group buttons\n          input = label[getElementsByTagName](INPUT)[0];\n  \n        if ( !input ) return; //return if no input found\n  \n        // manage the dom manipulation\n        if ( input.type === 'checkbox' ) { //checkboxes\n          if ( !input[checked] ) {\n            addClass(label,active);\n            input[getAttribute](checked);\n            input[setAttribute](checked,checked);\n            input[checked] = true;\n          } else {\n            removeClass(label,active);\n            input[getAttribute](checked);\n            input.removeAttribute(checked);\n            input[checked] = false;\n          }\n  \n          if (!toggled) { // prevent triggering the event twice\n            toggled = true;\n            bootstrapCustomEvent.call(input, changeEvent, component); //trigger the change for the input\n            bootstrapCustomEvent.call(element, changeEvent, component); //trigger the change for the btn-group\n          }\n        }\n  \n        if ( input.type === 'radio' && !toggled ) { // radio buttons\n          if ( !input[checked] ) { // don't trigger if already active\n            addClass(label,active);\n            input[setAttribute](checked,checked);\n            input[checked] = true;\n            bootstrapCustomEvent.call(input, changeEvent, component); //trigger the change for the input\n            bootstrapCustomEvent.call(element, changeEvent, component); //trigger the change for the btn-group\n  \n            toggled = true;\n            for (var i = 0, ll = labels[length]; i<ll; i++) {\n              var otherLabel = labels[i], otherInput = otherLabel[getElementsByTagName](INPUT)[0];\n              if ( otherLabel !== label && hasClass(otherLabel,active) )  {\n                removeClass(otherLabel,active);\n                otherInput.removeAttribute(checked);\n                otherInput[checked] = false;\n                bootstrapCustomEvent.call(otherInput, changeEvent, component); // trigger the change\n              }\n            }\n          }\n        }\n        setTimeout( function() { toggled = false; }, 50 );\n      };\n  \n    // init\n    if ( !( stringButton in element ) ) { // prevent adding event handlers twice\n      on( element, clickEvent, toggle );\n    }\n  \n    // activate items on load\n    var labelsToACtivate = getElementsByClassName(element, 'btn'), lbll = labelsToACtivate[length];\n    for (var i=0; i<lbll; i++) {\n      !hasClass(labelsToACtivate[i],active) && queryElement('input:checked',labelsToACtivate[i]) \n                                            && addClass(labelsToACtivate[i],active);\n    }\n    element[stringButton] = this;\n  };\n  \n  // BUTTON DATA API\n  // =================\n  initializeDataAPI( stringButton, Button, DOC[querySelectorAll]('['+dataToggle+'=\"buttons\"]') );\n  \n  \n  /* Native Javascript for Bootstrap 4 | Carousel\n  ----------------------------------------------*/\n  \n  // CAROUSEL DEFINITION\n  // ===================\n  var Carousel = function( element, options ) {\n  \n    // initialization element\n    element = queryElement( element );\n  \n    // set options\n    options = options || {};\n  \n    // DATA API\n    var intervalData = element[getAttribute](dataInterval) === 'false' ? false : parseInt(element[getAttribute](dataInterval)) || 5000, // bootstrap carousel default interval\n        pauseData = element[getAttribute](dataPause) === hoverEvent || false,\n        keyboardData = element[getAttribute](dataKeyboard) === 'true' || false,\n      \n        // strings\n        component = 'carousel',\n        paused = 'paused',\n        direction = 'direction',\n        carouselItem = 'carousel-item',\n        dataSlideTo = 'data-slide-to'; \n  \n    this[keyboard] = options[keyboard] === true || keyboardData;\n    this[pause] = (options[pause] === hoverEvent || pauseData) ? hoverEvent : false; // false / hover\n  \n    if ( !( options[interval] || intervalData ) ) { // determine slide interval\n      this[interval] = false;\n    } else {\n      this[interval] = parseInt(options[interval]) || intervalData; // default slide interval\n    }\n  \n    // bind, event targets\n    var self = this, index = element.index = 0, timer = element.timer = 0, \n      isSliding = false, // isSliding prevents click event handlers when animation is running\n      slides = getElementsByClassName(element,carouselItem), total = slides[length],\n      slideDirection = this[direction] = left,\n      leftArrow = getElementsByClassName(element,component+'-control-prev')[0], \n      rightArrow = getElementsByClassName(element,component+'-control-next')[0],\n      indicator = queryElement( '.'+component+'-indicators', element ),\n      indicators = indicator && indicator[getElementsByTagName]( \"LI\" ) || [];\n  \n    // handlers\n    var pauseHandler = function () {\n        if ( self[interval] !==false && !hasClass(element,paused) ) {\n          addClass(element,paused);\n          !isSliding && clearInterval( timer );\n        }\n      },\n      resumeHandler = function() {\n        if ( self[interval] !== false && hasClass(element,paused) ) {\n          removeClass(element,paused);\n          !isSliding && clearInterval( timer );\n          !isSliding && self.cycle();\n        }\n      },\n      indicatorHandler = function(e) {\n        e[preventDefault]();\n        if (isSliding) return;\n  \n        var eventTarget = e[target], activeIndicator = self.getActiveIndex(); // event target | the current active item\n  \n        if ( eventTarget && !hasClass(eventTarget,active) && eventTarget[getAttribute](dataSlideTo) ) {\n          index = parseInt( eventTarget[getAttribute](dataSlideTo), 10 );\n        } else { return false; }\n  \n        self.slideTo( index ); //Do the slide\n      },\n      controlsHandler = function (e) {\n        e[preventDefault]();\n        if (isSliding) return;\n  \n        var eventTarget = e.currentTarget || e.srcElement;\n  \n        if ( eventTarget === rightArrow ) {\n          index++;\n        } else if ( eventTarget === leftArrow ) {\n          index--;\n        }\n  \n        self.slideTo( index ); //Do the slide\n      },\n      keyHandler = function (e) {\n        if (isSliding) return;\n        switch (e.which) {\n          case 39:\n            index++;\n            break;\n          case 37:\n            index--;\n            break;\n          default: return;\n        }\n        self.slideTo( index ); //Do the slide\n      },\n      // private methods\n      isElementInScrollRange = function () {\n        var rect = element[getBoundingClientRect](),\n          viewportHeight = globalObject[innerHeight] || HTML[clientHeight]\n        return rect[top] <= viewportHeight && rect[bottom] >= 0; // bottom && top\n      },    \n      setActivePage = function( pageIndex ) { //indicators\n        for ( var i = 0, icl = indicators[length]; i < icl; i++ ) {\n          removeClass(indicators[i],active);\n        }\n        if (indicators[pageIndex]) addClass(indicators[pageIndex], active);\n      };\n  \n  \n    // public methods\n    this.cycle = function() {\n      timer = setInterval(function() {\n        isElementInScrollRange() && (index++, self.slideTo( index ) );\n      }, this[interval]);\n    };\n    this.slideTo = function( next ) {\n      if (isSliding) return; // when controled via methods, make sure to check again      \n      \n      var activeItem = this.getActiveIndex(), // the current active\n          orientation;\n      \n      // determine slideDirection first\n      if  ( (activeItem < next ) || (activeItem === 0 && next === total -1 ) ) {\n        slideDirection = self[direction] = left; // next\n      } else if  ( (activeItem > next) || (activeItem === total - 1 && next === 0 ) ) {\n        slideDirection = self[direction] = right; // prev\n      }\n  \n      // find the right next index \n      if ( next < 0 ) { next = total - 1; } \n      else if ( next === total ){ next = 0; }\n  \n      // update index\n      index = next;\n  \n      orientation = slideDirection === left ? 'next' : 'prev'; //determine type\n      bootstrapCustomEvent.call(element, slideEvent, component, slides[next]); // here we go with the slide\n  \n      isSliding = true;\n      clearInterval(timer);\n      setActivePage( next );\n  \n      if ( supportTransitions && hasClass(element,'slide') ) {\n  \n        addClass(slides[next],carouselItem +'-'+ orientation);\n        slides[next][offsetWidth];\n        addClass(slides[next],carouselItem +'-'+ slideDirection);\n        addClass(slides[activeItem],carouselItem +'-'+ slideDirection);\n  \n        one(slides[activeItem], transitionEndEvent, function(e) {\n          var timeout = e[target] !== slides[activeItem] ? e.elapsedTime*1000 : 0;\n          \n          setTimeout(function(){\n            isSliding = false;\n  \n            addClass(slides[next],active);\n            removeClass(slides[activeItem],active);\n  \n            removeClass(slides[next],carouselItem +'-'+ orientation);\n            removeClass(slides[next],carouselItem +'-'+ slideDirection);\n            removeClass(slides[activeItem],carouselItem +'-'+ slideDirection);\n  \n            bootstrapCustomEvent.call(element, slidEvent, component, slides[next]);\n  \n            if ( !document.hidden && self[interval] && !hasClass(element,paused) ) {\n              self.cycle();\n            }\n          },timeout+100);\n        });\n  \n      } else {\n        addClass(slides[next],active);\n        slides[next][offsetWidth];\n        removeClass(slides[activeItem],active);\n        setTimeout(function() {\n          isSliding = false;\n          if ( self[interval] && !hasClass(element,paused) ) {\n            self.cycle();\n          }\n          bootstrapCustomEvent.call(element, slidEvent, component, slides[next]);\n        }, 100 );\n      }\n    };\n    this.getActiveIndex = function () {\n      return slides[indexOf](getElementsByClassName(element,carouselItem+' active')[0]) || 0;\n    };\n  \n    // init\n    if ( !(stringCarousel in element ) ) { // prevent adding event handlers twice\n  \n      if ( this[pause] && this[interval] ) {\n        on( element, mouseHover[0], pauseHandler );\n        on( element, mouseHover[1], resumeHandler );\n        on( element, 'touchstart', pauseHandler );\n        on( element, 'touchend', resumeHandler );\n      }\n    \n      rightArrow && on( rightArrow, clickEvent, controlsHandler );\n      leftArrow && on( leftArrow, clickEvent, controlsHandler );\n    \n      indicator && on( indicator, clickEvent, indicatorHandler, false);\n      this[keyboard] === true && on( globalObject, keydownEvent, keyHandler, false);\n    }\n    if (this.getActiveIndex()<0) {\n      slides[length] && addClass(slides[0],active);\n      indicators[length] && setActivePage(0);\n    }\n  \n    if ( this[interval] ){ this.cycle(); }\n    element[stringCarousel] = this;\n  };\n  \n  // CAROUSEL DATA API\n  // =================\n  initializeDataAPI( stringCarousel, Carousel, DOC[querySelectorAll]('['+dataRide+'=\"carousel\"]') );\n  \n  \n  /* Native Javascript for Bootstrap 4 | Collapse\n  -----------------------------------------------*/\n  \n  // COLLAPSE DEFINITION\n  // ===================\n  var Collapse = function( element, options ) {\n  \n    // initialization element\n    element = queryElement(element);\n  \n    // set options\n    options = options || {};\n  \n  \n    // event targets and constants\n    var accordion = null, collapse = null, self = this, \n      isAnimating = false, // when true it will prevent click handlers\n      accordionData = element[getAttribute]('data-parent'),\n  \n      // component strings\n      component = 'collapse',\n      collapsed = 'collapsed',\n  \n      // private methods\n      openAction = function(collapseElement) {\n        bootstrapCustomEvent.call(collapseElement, showEvent, component);\n        isAnimating = true;\n        addClass(collapseElement,collapsing);\n        removeClass(collapseElement,component);\n        collapseElement[style][height] = collapseElement[scrollHeight] + 'px';\n        \n        emulateTransitionEnd(collapseElement, function() {\n          isAnimating = false;\n          collapseElement[setAttribute](ariaExpanded,'true');\n          removeClass(collapseElement,collapsing);\n          addClass(collapseElement, component);\n          addClass(collapseElement,showClass);\n          collapseElement[style][height] = '';\n          bootstrapCustomEvent.call(collapseElement, shownEvent, component);\n        });\n      },\n      closeAction = function(collapseElement) {\n        bootstrapCustomEvent.call(collapseElement, hideEvent, component);\n        isAnimating = true;\n        collapseElement[style][height] = collapseElement[scrollHeight] + 'px'; // set height first\n        removeClass(collapseElement,component);\n        removeClass(collapseElement,showClass);\n        addClass(collapseElement,collapsing);\n        collapseElement[offsetWidth]; // force reflow to enable transition\n        collapseElement[style][height] = '0px';\n        \n        emulateTransitionEnd(collapseElement, function() {\n          isAnimating = false;\n          collapseElement[setAttribute](ariaExpanded,'false');\n          removeClass(collapseElement,collapsing);\n          addClass(collapseElement,component);\n          collapseElement[style][height] = '';\n          bootstrapCustomEvent.call(collapseElement, hiddenEvent, component);\n        });\n      },\n      getTarget = function() {\n        var href = element.href && element[getAttribute]('href'),\n          parent = element[getAttribute](dataTarget),\n          id = href || ( parent && targetsReg.test(parent) ) && parent;\n        return id && queryElement(id);\n      };\n    \n    // public methods\n    this.toggle = function(e) {\n      e[preventDefault]();\n      if (isAnimating) return;\n      if (!hasClass(collapse,showClass)) { self.show(); } \n      else { self.hide(); }\n    };\n    this.hide = function() {\n      closeAction(collapse);\n      addClass(element,collapsed);\n    };\n    this.show = function() {\n      if ( accordion ) {\n        var activeCollapse = queryElement('.'+component+'.'+showClass,accordion),\n            toggle = activeCollapse && (queryElement('['+dataToggle+'=\"'+component+'\"]['+dataTarget+'=\"#'+activeCollapse.id+'\"]',accordion)\n                   || queryElement('['+dataToggle+'=\"'+component+'\"][href=\"#'+activeCollapse.id+'\"]',accordion) ),\n            correspondingCollapse = toggle && (toggle[getAttribute](dataTarget) || toggle.href);\n        if ( activeCollapse && toggle && activeCollapse !== collapse ) {\n          closeAction(activeCollapse); \n          if ( correspondingCollapse.split('#')[1] !== collapse.id ) { addClass(toggle,collapsed); } \n          else { removeClass(toggle,collapsed); }\n        }\n      }\n  \n      openAction(collapse);\n      removeClass(element,collapsed); \n    };\n  \n    // init\n    if ( !(stringCollapse in element ) ) { // prevent adding event handlers twice\n      on(element, clickEvent, this.toggle);\n    }\n    collapse = getTarget();\n    accordion = queryElement(options.parent) || accordionData && getClosest(element, accordionData);\n    element[stringCollapse] = this;\n  };\n  \n  // COLLAPSE DATA API\n  // =================\n  initializeDataAPI(stringCollapse, Collapse, DOC[querySelectorAll]('['+dataToggle+'=\"collapse\"]'));\n  \n  \n  /* Native Javascript for Bootstrap 4 | Dropdown\n  ----------------------------------------------*/\n  \n  // DROPDOWN DEFINITION\n  // ===================\n  var Dropdown = function( element, option ) {\n      \n    // initialization element\n    element = queryElement(element);\n  \n    // set option\n    this.persist = option === true || element[getAttribute]('data-persist') === 'true' || false;\n  \n    // constants, event targets, strings\n    var self = this,\n      parent = element[parentNode],\n      component = 'dropdown', open = 'open',\n      relatedTarget = null,\n      menu = queryElement('.dropdown-menu', parent),\n  \n      // preventDefault on empty anchor links\n      preventEmptyAnchor = function(anchor){\n        (/\\#$/.test(anchor.href) || anchor[parentNode] && /\\#$/.test(anchor[parentNode].href)) && this[preventDefault](); // should be here to prevent jumps        \n      },\n  \n      // toggle dismissible events\n      toggleDismiss = function(){\n        var type = element[open] ? on : off;\n        type(DOC, keydownEvent, keyHandler);\n        type(DOC, clickEvent, dismissHandler); \n      },\n  \n      // handlers\n      dismissHandler = function(e) {\n        var eventTarget = e[target],\n          hasData = eventTarget && (eventTarget[getAttribute](dataToggle) \n                                || eventTarget[parentNode] && getAttribute in eventTarget[parentNode] \n                                && eventTarget[parentNode][getAttribute](dataToggle));\n        \n        if ( (eventTarget === menu || menu.contains(eventTarget)) && (self.persist || hasData) ) { return; }\n        else {\n          relatedTarget = eventTarget === element || element.contains(eventTarget) ? element : null;\n          hide();\n        }\n        preventEmptyAnchor.call(e,eventTarget);\n      },\n      keyHandler = function(e) {\n        if ( element[open] && e.which === 27 ) { relatedTarget = null; hide(); }\n      },\n      clickHandler = function(e) {\n        relatedTarget = element;\n        show();\n        preventEmptyAnchor.call(e,e[target]);\n      },\n  \n      // private methods\n      show = function() {\n        bootstrapCustomEvent.call(parent, showEvent, component, relatedTarget);\n        addClass(menu,showClass);\n        addClass(parent,showClass);\n        menu[setAttribute](ariaExpanded,true);\n        bootstrapCustomEvent.call(parent, shownEvent, component, relatedTarget);\n        element[open] = true;\n        off(element, clickEvent, clickHandler);\n        setTimeout(function(){ toggleDismiss(); },1);\n      },\n      hide = function() {\n        bootstrapCustomEvent.call(parent, hideEvent, component, relatedTarget);\n        removeClass(menu,showClass);\n        removeClass(parent,showClass);\n        menu[setAttribute](ariaExpanded,false);\n        bootstrapCustomEvent.call(parent, hiddenEvent, component, relatedTarget);\n        element[open] = false;\n        toggleDismiss();\n        setTimeout(function(){ on(element, clickEvent, clickHandler); },1);\n      };\n  \n    // set initial state to closed\n    element[open] = false;\n  \n    // public methods\n    this.toggle = function() {\n      if (hasClass(parent,showClass) && element[open]) { hide(); } \n      else { show(); }\n    };\n  \n    // init\n    if ( !(stringDropdown in element) ) { // prevent adding event handlers twice\n      menu[setAttribute]('tabindex', '0'); // Fix onblur on Chrome | Safari\n      on(element, clickEvent, clickHandler);\n    }\n  \n    element[stringDropdown] = this;\n  };\n  \n  // DROPDOWN DATA API\n  // =================\n  initializeDataAPI( stringDropdown, Dropdown, DOC[querySelectorAll]('['+dataToggle+'=\"dropdown\"]') );\n  \n  \n  /* Native Javascript for Bootstrap 4 | Modal\n  -------------------------------------------*/\n  \n  // MODAL DEFINITION\n  // ===============\n  var Modal = function(element, options) { // element can be the modal/triggering button\n  \n    // the modal (both JavaScript / DATA API init) / triggering button element (DATA API)\n    element = queryElement(element);\n  \n    // determine modal, triggering element\n    var btnCheck = element[getAttribute](dataTarget)||element[getAttribute]('href'),\n      checkModal = queryElement( btnCheck ),\n      modal = hasClass(element,'modal') ? element : checkModal,\n  \n      // strings\n      component = 'modal',\n      staticString = 'static',\n      paddingLeft = 'paddingLeft',\n      paddingRight = 'paddingRight',\n      modalBackdropString = 'modal-backdrop';\n  \n    if ( hasClass(element,'modal') ) { element = null; } // modal is now independent of it's triggering element\n  \n    if ( !modal ) { return; } // invalidate\n  \n    // set options\n    options = options || {};\n  \n    this[keyboard] = options[keyboard] === false || modal[getAttribute](dataKeyboard) === 'false' ? false : true;\n    this[backdrop] = options[backdrop] === staticString || modal[getAttribute](databackdrop) === staticString ? staticString : true;\n    this[backdrop] = options[backdrop] === false || modal[getAttribute](databackdrop) === 'false' ? false : this[backdrop];\n    this[content]  = options[content]; // JavaScript only\n  \n    // bind, constants, event targets and other vars\n    var self = this, relatedTarget = null,\n      bodyIsOverflowing, modalIsOverflowing, scrollbarWidth, overlay,\n  \n      // also find fixed-top / fixed-bottom items\n      fixedItems = getElementsByClassName(HTML,fixedTop).concat(getElementsByClassName(HTML,fixedBottom)),\n  \n      // private methods\n      getWindowWidth = function() {\n        var htmlRect = HTML[getBoundingClientRect]();\n        return globalObject[innerWidth] || (htmlRect[right] - Math.abs(htmlRect[left]));\n      },\n      setScrollbar = function () {\n        var bodyStyle = globalObject.getComputedStyle(DOC[body]),\n            bodyPad = parseInt((bodyStyle[paddingRight]), 10), itemPad;\n        if (bodyIsOverflowing) {\n          DOC[body][style][paddingRight] = (bodyPad + scrollbarWidth) + 'px';\n          if (fixedItems[length]){\n            for (var i = 0; i < fixedItems[length]; i++) {\n              itemPad = globalObject.getComputedStyle(fixedItems[i])[paddingRight];\n              fixedItems[i][style][paddingRight] = ( parseInt(itemPad) + scrollbarWidth) + 'px';\n            }\n          }\n        }\n      },\n      resetScrollbar = function () {\n        DOC[body][style][paddingRight] = '';\n        if (fixedItems[length]){\n          for (var i = 0; i < fixedItems[length]; i++) {\n            fixedItems[i][style][paddingRight] = '';\n          }\n        }\n      },\n      measureScrollbar = function () { // thx walsh\n        var scrollDiv = document.createElement('div'), scrollBarWidth;\n        scrollDiv.className = component+'-scrollbar-measure'; // this is here to stay\n        DOC[body].appendChild(scrollDiv);\n        scrollBarWidth = scrollDiv[offsetWidth] - scrollDiv[clientWidth];\n        DOC[body].removeChild(scrollDiv);\n        return scrollBarWidth;\n      },\n      checkScrollbar = function () {\n        bodyIsOverflowing = DOC[body][clientWidth] < getWindowWidth();\n        modalIsOverflowing = modal[scrollHeight] > HTML[clientHeight];\n        scrollbarWidth = measureScrollbar();\n      },\n      adjustDialog = function () {\n        modal[style][paddingLeft] = !bodyIsOverflowing && modalIsOverflowing ? scrollbarWidth + 'px' : '';\n        modal[style][paddingRight] = bodyIsOverflowing && !modalIsOverflowing ? scrollbarWidth + 'px' : '';\n      },\n      resetAdjustments = function () {\n        modal[style][paddingLeft] = '';\n        modal[style][paddingRight] = '';\n      },\n      createOverlay = function() {\n        modalOverlay = 1;        \n        \n        var newOverlay = document.createElement('div');\n        overlay = queryElement('.'+modalBackdropString);\n  \n        if ( overlay === null ) {\n          newOverlay[setAttribute]('class',modalBackdropString+' fade');\n          overlay = newOverlay;\n          DOC[body].appendChild(overlay);\n        }\n      },\n      removeOverlay = function() {\n        overlay = queryElement('.'+modalBackdropString);\n        if ( overlay && overlay !== null && typeof overlay === 'object' ) {\n          modalOverlay = 0;        \n          DOC[body].removeChild(overlay); overlay = null;\n        }\n        bootstrapCustomEvent.call(modal, hiddenEvent, component);      \n      },\n      keydownHandlerToggle = function() {\n        if (hasClass(modal,showClass)) {\n          on(document, keydownEvent, keyHandler);\n        } else {\n          off(document, keydownEvent, keyHandler);\n        }\n      },\n      resizeHandlerToggle = function() {\n        if (hasClass(modal,showClass)) {\n          on(globalObject, resizeEvent, self.update);\n        } else {\n          off(globalObject, resizeEvent, self.update);\n        }\n      },\n      dismissHandlerToggle = function() {\n        if (hasClass(modal,showClass)) {\n          on(modal, clickEvent, dismissHandler);\n        } else {\n          off(modal, clickEvent, dismissHandler);\n        }\n      },\n      // triggers\n      triggerShow = function() {\n        setFocus(modal);\n        bootstrapCustomEvent.call(modal, shownEvent, component, relatedTarget);\n      },\n      triggerHide = function() {\n        modal[style].display = '';\n        element && (setFocus(element));\n        \n        setTimeout(function(){\n          if (!getElementsByClassName(document,component+' '+showClass)[0]) {\n            resetAdjustments();\n            resetScrollbar();\n            removeClass(DOC[body],component+'-open');\n            overlay && hasClass(overlay,'fade') ? (removeClass(overlay,showClass), emulateTransitionEnd(overlay,removeOverlay)) \n            : removeOverlay();\n  \n            resizeHandlerToggle();\n            dismissHandlerToggle();\n            keydownHandlerToggle();\n          }\n        }, 50);\n      },\n      // handlers\n      clickHandler = function(e) {\n        var clickTarget = e[target];\n        clickTarget = clickTarget[hasAttribute](dataTarget) || clickTarget[hasAttribute]('href') ? clickTarget : clickTarget[parentNode];\n        if ( clickTarget === element && !hasClass(modal,showClass) ) {\n          modal.modalTrigger = element;\n          relatedTarget = element;\n          self.show();\n          e[preventDefault]();\n        }\n      },\n      keyHandler = function(e) {\n        if (self[keyboard] && e.which == 27 && hasClass(modal,showClass)) {\n          self.hide();\n        }\n      },\n      dismissHandler = function(e) {\n        var clickTarget = e[target];\n        if ( hasClass(modal,showClass) && (clickTarget[parentNode][getAttribute](dataDismiss) === component\n            || clickTarget[getAttribute](dataDismiss) === component\n            || (clickTarget === modal && self[backdrop] !== staticString) ) ) {\n          self.hide(); relatedTarget = null;\n          e[preventDefault]();\n        }\n      };\n  \n    // public methods\n    this.toggle = function() {\n      if ( hasClass(modal,showClass) ) {this.hide();} else {this.show();}\n    };\n    this.show = function() {\n      bootstrapCustomEvent.call(modal, showEvent, component, relatedTarget);\n  \n      // we elegantly hide any opened modal\n      var currentOpen = getElementsByClassName(document,component+' '+showClass)[0];\n      currentOpen && currentOpen !== modal && currentOpen.modalTrigger[stringModal].hide();\n  \n      if ( this[backdrop] ) {\n        !modalOverlay && createOverlay();\n      }\n  \n      if ( overlay && modalOverlay && !hasClass(overlay,showClass)) {\n        overlay[offsetWidth]; // force reflow to enable trasition\n        addClass(overlay, showClass);\n      }\n  \n      setTimeout( function() {\n        modal[style].display = 'block';\n  \n        checkScrollbar();\n        setScrollbar();\n        adjustDialog();\n  \n        addClass(DOC[body],component+'-open');\n        addClass(modal,showClass);\n        modal[setAttribute](ariaHidden, false);\n        \n        resizeHandlerToggle();\n        dismissHandlerToggle();\n        keydownHandlerToggle();\n  \n        hasClass(modal,'fade') ? emulateTransitionEnd(modal, triggerShow) : triggerShow();\n      }, supportTransitions ? 150 : 0);\n    };\n    this.hide = function() {\n      bootstrapCustomEvent.call(modal, hideEvent, component);\n      overlay = queryElement('.'+modalBackdropString);\n  \n      removeClass(modal,showClass);\n      modal[setAttribute](ariaHidden, true);\n  \n      setTimeout(function(){\n        hasClass(modal,'fade') ? emulateTransitionEnd(modal, triggerHide) : triggerHide();\n      }, supportTransitions ? 150 : 0);\n    };\n    this.setContent = function( content ) {\n      queryElement('.'+component+'-content',modal).innerHTML = content;\n    };\n    this.update = function() {\n      if (hasClass(modal,showClass)) {\n        checkScrollbar();\n        setScrollbar();\n        adjustDialog();\n      }\n    };\n  \n    // init\n    // prevent adding event handlers over and over\n    // modal is independent of a triggering element\n    if ( !!element && !(stringModal in element) ) {\n      on(element, clickEvent, clickHandler);\n    }\n    if ( !!this[content] ) { this.setContent( this[content] ); }\n    !!element && (element[stringModal] = this);\n  };\n  \n  // DATA API\n  initializeDataAPI(stringModal, Modal, DOC[querySelectorAll]('['+dataToggle+'=\"modal\"]'));\n  \n  /* Native Javascript for Bootstrap 4 | Popover\n  ----------------------------------------------*/\n  \n  // POPOVER DEFINITION\n  // ==================\n  var Popover = function( element, options ) {\n  \n    // initialization element\n    element = queryElement(element);\n  \n    // DATA API\n    var triggerData = element[getAttribute](dataTrigger), // click / hover / focus\n        animationData = element[getAttribute](dataAnimation), // true / false\n        placementData = element[getAttribute](dataPlacement),\n        dismissibleData = element[getAttribute](dataDismissible),\n        delayData = element[getAttribute](dataDelay),\n        containerData = element[getAttribute](dataContainer),\n  \n        // internal strings\n        component = 'popover',\n        template = 'template',\n        trigger = 'trigger',\n        classString = 'class',\n        div = 'div',\n        fade = 'fade',\n        content = 'content',\n        dataContent = 'data-content',\n        dismissible = 'dismissible',\n        closeBtn = '<button type=\"button\" class=\"close\">Ã</button>',\n        \n        // maybe the element is inside a modal\n        modal = getClosest(element,'.modal'),\n        \n        // maybe the element is inside a fixed navbar\n        navbarFixedTop = getClosest(element,'.'+fixedTop),\n        navbarFixedBottom = getClosest(element,'.'+fixedBottom);\n  \n    // set options\n    options = options || {};\n    this[template] = options[template] ? options[template] : null; // JavaScript only\n    this[trigger] = options[trigger] ? options[trigger] : triggerData || hoverEvent;\n    this[animation] = options[animation] && options[animation] !== fade ? options[animation] : animationData || fade;\n    this[placement] = options[placement] ? options[placement] : placementData || top;\n    this[delay] = parseInt(options[delay] || delayData) || 200;\n    this[dismissible] = options[dismissible] || dismissibleData === 'true' ? true : false;\n    this[container] = queryElement(options[container]) ? queryElement(options[container]) \n                    : queryElement(containerData) ? queryElement(containerData) \n                    : navbarFixedTop ? navbarFixedTop\n                    : navbarFixedBottom ? navbarFixedBottom\n                    : modal ? modal : DOC[body];\n    \n    // bind, content\n    var self = this, \n      titleString = element[getAttribute](dataTitle) || null,\n      contentString = element[getAttribute](dataContent) || null;\n  \n    if ( !contentString && !this[template] ) return; // invalidate\n  \n    // constants, vars\n    var popover = null, timer = 0, placementSetting = this[placement],\n      \n      // handlers\n      dismissibleHandler = function(e) {\n        if (popover !== null && e[target] === queryElement('.close',popover)) {\n          self.hide();\n        }\n      },\n  \n      // private methods\n      removePopover = function() {\n        self[container].removeChild(popover);\n        timer = null; popover = null; \n      },\n      createPopover = function() {\n        titleString = element[getAttribute](dataTitle); // check content again\n        contentString = element[getAttribute](dataContent);\n  \n        popover = document.createElement(div);\n  \n        // popover arrow\n        var popoverArrow = document.createElement(div);\n        popoverArrow[setAttribute](classString,'arrow');\n        popover.appendChild(popoverArrow);\n  \n        if ( contentString !== null && self[template] === null ) { //create the popover from data attributes\n  \n          popover[setAttribute]('role','tooltip');\n  \n          if (titleString !== null) {\n            var popoverTitle = document.createElement('h3');\n            popoverTitle[setAttribute](classString,component+'-header');\n  \n            popoverTitle.innerHTML = self[dismissible] ? titleString + closeBtn : titleString;\n            popover.appendChild(popoverTitle);\n          }\n  \n          //set popover content\n          var popoverContent = document.createElement(div);\n          popoverContent[setAttribute](classString,component+'-body');\n          popoverContent.innerHTML = self[dismissible] && titleString === null ? contentString + closeBtn : contentString;\n          popover.appendChild(popoverContent);\n  \n        } else {  // or create the popover from template\n          var popoverTemplate = document.createElement(div);\n          popoverTemplate.innerHTML = self[template];\n          popover.innerHTML = popoverTemplate.firstChild.innerHTML;\n        }\n  \n        //append to the container\n        self[container].appendChild(popover);\n        popover[style].display = 'block';\n        popover[setAttribute](classString, component+ ' bs-' + component+'-'+placementSetting + ' ' + self[animation]);\n      },\n      showPopover = function () {\n        !hasClass(popover,showClass) && ( addClass(popover,showClass) );\n      },\n      updatePopover = function() {\n        styleTip(element,popover,placementSetting,self[container]);\n      },\n  \n      // event toggle\n      dismissHandlerToggle = function(type){\n        if (/^(click|focus)$/.test(self[trigger])) {\n          !self[dismissible] && type( element, 'blur', self.hide );\n        }\n        self[dismissible] && type( document, clickEvent, dismissibleHandler );     \n        type( globalObject, resizeEvent, self.hide );\n      },\n  \n      // triggers\n      showTrigger = function() {\n        dismissHandlerToggle(on);\n        bootstrapCustomEvent.call(element, shownEvent, component);\n      },\n      hideTrigger = function() {\n        dismissHandlerToggle(off);\n        removePopover();\n        bootstrapCustomEvent.call(element, hiddenEvent, component);\n      };\n  \n    // public methods / handlers\n    this.toggle = function() {\n      if (popover === null) { self.show(); } \n      else { self.hide(); }\n    };\n    this.show = function() {\n      clearTimeout(timer);\n      timer = setTimeout( function() {\n        if (popover === null) {\n          placementSetting = self[placement]; // we reset placement in all cases\n          createPopover();\n          updatePopover();\n          showPopover();\n          bootstrapCustomEvent.call(element, showEvent, component);\n          !!self[animation] ? emulateTransitionEnd(popover, showTrigger) : showTrigger();\n        }\n      }, 20 );\n    };\n    this.hide = function() {\n      clearTimeout(timer);\n      timer = setTimeout( function() {\n        if (popover && popover !== null && hasClass(popover,showClass)) {\n          bootstrapCustomEvent.call(element, hideEvent, component);\n          removeClass(popover,showClass);\n          !!self[animation] ? emulateTransitionEnd(popover, hideTrigger) : hideTrigger();\n        }\n      }, self[delay] );\n    };\n  \n    // init\n    if ( !(stringPopover in element) ) { // prevent adding event handlers twice\n      if (self[trigger] === hoverEvent) {\n        on( element, mouseHover[0], self.show );\n        if (!self[dismissible]) { on( element, mouseHover[1], self.hide ); }\n      } else if (/^(click|focus)$/.test(self[trigger])) {\n        on( element, self[trigger], self.toggle );\n      }\n    }\n    element[stringPopover] = self;\n  };\n  \n  // POPOVER DATA API\n  // ================\n  initializeDataAPI(stringPopover, Popover, DOC[querySelectorAll]('['+dataToggle+'=\"popover\"]'));\n  \n  \n  /* Native Javascript for Bootstrap 4 | ScrollSpy\n  -----------------------------------------------*/\n  \n  // SCROLLSPY DEFINITION\n  // ====================\n  var ScrollSpy = function(element, options) {\n  \n    // initialization element, the element we spy on\n    element = queryElement(element); \n  \n    // DATA API\n    var targetData = queryElement(element[getAttribute](dataTarget)),\n        offsetData = element[getAttribute]('data-offset');\n  \n    // set options\n    options = options || {};\n    if ( !options[target] && !targetData ) { return; } // invalidate\n  \n    // event targets, constants\n    var spyTarget = options[target] && queryElement(options[target]) || targetData,\n        links = spyTarget && spyTarget[getElementsByTagName]('A'),\n        offset = parseInt(offsetData || options['offset']) || 10,      \n        items = [], targetItems = [], scrollOffset,\n        scrollTarget = element[offsetHeight] < element[scrollHeight] ? element : globalObject, // determine which is the real scrollTarget\n        isWindow = scrollTarget === globalObject;  \n  \n    // populate items and targets\n    for (var i=0, il=links[length]; i<il; i++) {\n      var href = links[i][getAttribute]('href'), \n          targetItem = href && targetsReg.test(href) && queryElement(href);\n      if ( !!targetItem ) {\n        items.push(links[i]);\n        targetItems.push(targetItem);\n      }\n    }\n  \n    // private methods\n    var updateItem = function(index) {\n        var item = items[index],\n          targetItem = targetItems[index], // the menu item targets this element\n          dropdown = item[parentNode][parentNode],\n          dropdownLink = hasClass(dropdown,'dropdown') && dropdown[getElementsByTagName]('A')[0],\n          targetRect = isWindow && targetItem[getBoundingClientRect](),\n  \n          isActive = hasClass(item,active) || false,\n  \n          topEdge = (isWindow ? targetRect[top] + scrollOffset : targetItem[offsetTop]) - offset,\n          bottomEdge = isWindow ? targetRect[bottom] + scrollOffset - offset : targetItems[index+1] ? targetItems[index+1][offsetTop] - offset : element[scrollHeight],\n  \n          inside = scrollOffset >= topEdge && bottomEdge > scrollOffset;\n  \n        if ( !isActive && inside ) {\n          if ( !hasClass(item,active) ) {\n            addClass(item,active);\n            isActive = true;\n            if (dropdownLink && !hasClass(dropdownLink,active) ) {\n              addClass(dropdownLink,active);\n            }\n            bootstrapCustomEvent.call(element, 'activate', 'scrollspy', items[index]);\n          }\n        } else if ( !inside ) {\n          if ( hasClass(item,active) ) {\n            removeClass(item,active);\n            isActive = false;\n            if (dropdownLink && hasClass(dropdownLink,active) && !getElementsByClassName(item[parentNode],active).length  ) {\n              removeClass(dropdownLink,active);\n            }\n          }\n        } else if ( !inside && !isActive || isActive && inside ) {\n          return;\n        }\n      },\n      updateItems = function(){\n        scrollOffset = isWindow ? getScroll().y : element[scrollTop];\n        for (var index=0, itl=items[length]; index<itl; index++) {\n          updateItem(index)\n        }\n      };\n  \n    // public method\n    this.refresh = function () {\n      updateItems();\n    }\n  \n    // init\n    if ( !(stringScrollSpy in element) ) { // prevent adding event handlers twice\n      on( scrollTarget, scrollEvent, this.refresh );\n      on( globalObject, resizeEvent, this.refresh ); \n    }\n    this.refresh();\n    element[stringScrollSpy] = this;\n  };\n  \n  // SCROLLSPY DATA API\n  // ==================\n  initializeDataAPI(stringScrollSpy, ScrollSpy, DOC[querySelectorAll]('['+dataSpy+'=\"scroll\"]'));\n  \n  \n  /* Native Javascript for Bootstrap 4 | Tab\n  -----------------------------------------*/\n  \n  // TAB DEFINITION\n  // ==============\n  var Tab = function( element, options ) {\n  \n    // initialization element\n    element = queryElement(element);\n  \n    // DATA API\n    var heightData = element[getAttribute](dataHeight),\n      \n        // strings\n        component = 'tab', height = 'height', float = 'float', isAnimating = 'isAnimating';\n        \n    // set options\n    options = options || {};\n    this[height] = supportTransitions ? (options[height] || heightData === 'true') : false;\n  \n    // bind, event targets\n    var self = this, next,\n      tabs = getClosest(element,'.nav'),\n      tabsContentContainer = false,\n      dropdown = tabs && queryElement('.dropdown-toggle',tabs),\n      activeTab, activeContent, nextContent, containerHeight, equalContents, nextHeight,\n      \n      // trigger\n      triggerEnd = function(){\n        tabsContentContainer[style][height] = '';\n        removeClass(tabsContentContainer,collapsing);\n        tabs[isAnimating] = false;\n      },\n      triggerShow = function() {\n        if (tabsContentContainer) { // height animation\n          if ( equalContents ) {\n            triggerEnd();\n          } else {\n            setTimeout(function(){ // enables height animation\n              tabsContentContainer[style][height] = nextHeight + 'px'; // height animation\n              tabsContentContainer[offsetWidth];\n              emulateTransitionEnd(tabsContentContainer, triggerEnd);\n            },1);\n          }\n        } else {\n          tabs[isAnimating] = false; \n        }\n        bootstrapCustomEvent.call(next, shownEvent, component, activeTab);\n      },\n      triggerHide = function() {\n        if (tabsContentContainer) {\n          activeContent[style][float] = left;\n          nextContent[style][float] = left;        \n          containerHeight = activeContent[scrollHeight];\n        }\n          \n        addClass(nextContent,active);\n        bootstrapCustomEvent.call(next, showEvent, component, activeTab);\n  \n        removeClass(activeContent,active);\n        bootstrapCustomEvent.call(activeTab, hiddenEvent, component, next);\n        \n        if (tabsContentContainer) {\n          nextHeight = nextContent[scrollHeight];\n          equalContents = nextHeight === containerHeight;\n          addClass(tabsContentContainer,collapsing);\n          tabsContentContainer[style][height] = containerHeight + 'px'; // height animation\n          tabsContentContainer[offsetHeight];\n          activeContent[style][float] = '';\n          nextContent[style][float] = '';   \n        }\n  \n        if ( hasClass(nextContent, 'fade') ) {\n          setTimeout(function(){\n            addClass(nextContent,showClass);\n            emulateTransitionEnd(nextContent,triggerShow);\n          },20);\n        } else { triggerShow(); }        \n      };\n  \n    if (!tabs) return; // invalidate\n  \n    // set default animation state\n    tabs[isAnimating] = false;    \n          \n    // private methods\n    var getActiveTab = function() {\n        var activeTabs = getElementsByClassName(tabs,active), activeTab;\n        if ( activeTabs[length] === 1 && !hasClass(activeTabs[0][parentNode],'dropdown') ) {\n          activeTab = activeTabs[0];\n        } else if ( activeTabs[length] > 1 ) {\n          activeTab = activeTabs[activeTabs[length]-1];\n        }\n        return activeTab;\n      },\n      getActiveContent = function() {\n        return queryElement(getActiveTab()[getAttribute]('href'));\n      },\n      // handler \n      clickHandler = function(e) {\n        e[preventDefault]();\n        next = e[target][getAttribute](dataToggle) === component || targetsReg.test(e[target][getAttribute]('href')) \n             ? e[target] : e[target][parentNode]; // allow for child elements like icons to use the handler\n        !tabs[isAnimating] && !hasClass(next,active) && self.show();\n      };\n  \n    // public method\n    this.show = function() { // the tab we clicked is now the next tab\n      next = next || element;\n      nextContent = queryElement(next[getAttribute]('href')); //this is the actual object, the next tab content to activate\n      activeTab = getActiveTab(); \n      activeContent = getActiveContent();\n      \n      tabs[isAnimating] = true;\n      removeClass(activeTab,active);\n      addClass(next,active);\n  \n      if ( dropdown ) {\n        if ( !hasClass(element[parentNode],'dropdown-menu') ) {\n          if (hasClass(dropdown,active)) removeClass(dropdown,active);\n        } else {\n          if (!hasClass(dropdown,active)) addClass(dropdown,active);\n        }\n      }\n      \n      bootstrapCustomEvent.call(activeTab, hideEvent, component, next);\n  \n      if (hasClass(activeContent, 'fade')) {\n        removeClass(activeContent,showClass);\n        emulateTransitionEnd(activeContent, triggerHide);\n      } else { triggerHide(); }\n    };\n  \n    // init\n    if ( !(stringTab in element) ) { // prevent adding event handlers twice\n      on(element, clickEvent, clickHandler);\n    }\n    if (this[height]) { tabsContentContainer = getActiveContent()[parentNode]; }\n    element[stringTab] = this;\n  };\n  \n  // TAB DATA API\n  // ============\n  initializeDataAPI(stringTab, Tab, DOC[querySelectorAll]('['+dataToggle+'=\"tab\"]'));\n  \n  \n  /* Native Javascript for Bootstrap 4 | Tooltip\n  ---------------------------------------------*/\n  \n  // TOOLTIP DEFINITION\n  // ==================\n  var Tooltip = function( element,options ) {\n  \n    // initialization element\n    element = queryElement(element);\n  \n    // DATA API\n    var animationData = element[getAttribute](dataAnimation),\n        placementData = element[getAttribute](dataPlacement),\n        delayData = element[getAttribute](dataDelay),\n        containerData = element[getAttribute](dataContainer),\n        \n        // strings\n        component = 'tooltip',\n        classString = 'class',\n        title = 'title',\n        fade = 'fade',\n        div = 'div',\n  \n        // maybe the element is inside a modal\n        modal = getClosest(element,'.modal'),\n        \n        // maybe the element is inside a fixed navbar\n        navbarFixedTop = getClosest(element,'.'+fixedTop),\n        navbarFixedBottom = getClosest(element,'.'+fixedBottom);\n  \n    // set options\n    options = options || {};\n    this[animation] = options[animation] && options[animation] !== fade ? options[animation] : animationData || fade;\n    this[placement] = options[placement] ? options[placement] : placementData || top;\n    this[delay] = parseInt(options[delay] || delayData) || 200;\n    this[container] = queryElement(options[container]) ? queryElement(options[container]) \n                    : queryElement(containerData) ? queryElement(containerData) \n                    : navbarFixedTop ? navbarFixedTop\n                    : navbarFixedBottom ? navbarFixedBottom\n                    : modal ? modal : DOC[body];\n  \n    // bind, event targets, title and constants\n    var self = this, timer = 0, placementSetting = this[placement], tooltip = null,\n      titleString = element[getAttribute](title) || element[getAttribute](dataTitle) || element[getAttribute](dataOriginalTitle);\n  \n    if ( !titleString || titleString == \"\" ) return; // invalidate\n  \n    // private methods\n    var removeToolTip = function() {\n        self[container].removeChild(tooltip);\n        tooltip = null; timer = null;\n      },\n      createToolTip = function() {\n        titleString = element[getAttribute](title) || element[getAttribute](dataTitle) || element[getAttribute](dataOriginalTitle); // read the title again\n        if ( !titleString || titleString == \"\" ) return false; // invalidate\n        tooltip = document.createElement(div);\n        tooltip[setAttribute]('role',component);\n  \n        // tooltip arrow\n        var tooltipArrow = document.createElement(div);\n        tooltipArrow[setAttribute](classString,'arrow');\n        tooltip.appendChild(tooltipArrow);\n    \n        var tooltipInner = document.createElement(div);\n        tooltipInner[setAttribute](classString,component+'-inner');\n        tooltip.appendChild(tooltipInner);\n        tooltipInner.innerHTML = titleString;\n  \n        self[container].appendChild(tooltip);\n        tooltip[setAttribute](classString, component + ' bs-' + component+'-'+placementSetting + ' ' + self[animation]);\n      },\n      updateTooltip = function () {\n        styleTip(element,tooltip,placementSetting,self[container]);\n      },\n      showTooltip = function () {\n        !hasClass(tooltip,showClass) && ( addClass(tooltip,showClass) );\n      },\n      // triggers\n      showTrigger = function() {\n        on( globalObject, resizeEvent, self.hide );\n        bootstrapCustomEvent.call(element, shownEvent, component);\n      },\n      hideTrigger = function() {\n        off( globalObject, resizeEvent, self.hide );\n        removeToolTip();\n        bootstrapCustomEvent.call(element, hiddenEvent, component);\n      };\n  \n    // public methods\n    this.show = function() {\n      clearTimeout(timer);\n      timer = setTimeout( function() {\n        if (tooltip === null) {\n          placementSetting = self[placement]; // we reset placement in all cases\n          if(createToolTip() == false) return;\n          updateTooltip();\n          showTooltip();\n          bootstrapCustomEvent.call(element, showEvent, component);\n          !!self[animation] ? emulateTransitionEnd(tooltip, showTrigger) : showTrigger();\n        }\n      }, 20 );\n    };\n    this.hide = function() {\n      clearTimeout(timer);\n      timer = setTimeout( function() {\n        if (tooltip && tooltip !== null && hasClass(tooltip,showClass)) {\n          bootstrapCustomEvent.call(element, hideEvent, component);\n          removeClass(tooltip,showClass);\n          !!self[animation] ? emulateTransitionEnd(tooltip, hideTrigger) : hideTrigger();\n        }\n      }, self[delay]);\n    };\n    this.toggle = function() {\n      if (!tooltip) { self.show(); } \n      else { self.hide(); }\n    };\n  \n    // init\n    if ( !(stringTooltip in element) ) { // prevent adding event handlers twice\n      element[setAttribute](dataOriginalTitle,titleString);\n      element.removeAttribute(title);\n      on(element, mouseHover[0], this.show);\n      on(element, mouseHover[1], this.hide);\n    }\n    element[stringTooltip] = this;\n  };\n  \n  // TOOLTIP DATA API\n  // =================\n  initializeDataAPI(stringTooltip, Tooltip, DOC[querySelectorAll]('['+dataToggle+'=\"tooltip\"]'));\n  \n  \n  return {\n    Alert: Alert,\n    Button: Button,\n    Carousel: Carousel,\n    Collapse: Collapse,\n    Dropdown: Dropdown,\n    Modal: Modal,\n    Popover: Popover,\n    ScrollSpy: ScrollSpy,\n    Tab: Tab,\n    Tooltip: Tooltip\n  };\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../webpack/buildin/global.js */ 2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")},/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! dynamic exports provided */
/*! all exports used */
function(module,exports){eval('var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function("return this")() || (1,eval)("this");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === "object")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it\'s\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/MzY5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XG59IGNhdGNoKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcblx0XHRnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAod2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanNcbi8vIG1vZHVsZSBpZCA9IDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n')},/*!*********************************!*\
  !*** ./client/styles/site.scss ***!
  \*********************************/
/*! dynamic exports provided */
/*! all exports used */
function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2NsaWVudC9zdHlsZXMvc2l0ZS5zY3NzPzY1YzciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2NsaWVudC9zdHlsZXMvc2l0ZS5zY3NzXG4vLyBtb2R1bGUgaWQgPSAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n")}]);